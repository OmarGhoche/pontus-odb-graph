---
rules:
  ADP:
    vertices:
      - label: Person.Natural
        name: titular
        props:
          Full_Name: "${Nome?.trim().toUpperCase()}"
          Type:
            val: "colaborador"
            excludeFromSearch: true
          Customer_ID: "${CPF?.replaceAll('[^0-9]', '')}"
          Date_Of_Birth:
            val: "${Data_de_Nascimento_Idade?.trim()}"
            type: "java.util.Date"
            mandatoryInSearch: true
            predicate: "eq"
      #     Gender: "${Sex}"

      - label: Person.Employee
        props:
          ID: "${CPF?.replaceAll('[^0-9]', '')}"
#          Title: "${Matricula}"
          Role:
            val: "${(Cargo?.trim()?.length()>0)?Cargo:'Cargo não definido'} - ${Funcao?.trim()?.length()>0?Funcao:'Função não definida'}"
            excludeFromSearch: true
          Full_Name: "${Nome?.trim().toUpperCase()}"

      - label: Person.Natural
        condition: "${Nome_do_Responsavel_Legal?.trim()?.length() > 0 && CPF_Responsavel?.trim()?.length() > 0 }"
        name: responsavel
        props:
          Full_Name: "${Nome_do_Responsavel_Legal?.trim().toUpperCase()}"
          Customer_ID: "${CPF_Responsavel?.replaceAll('[^0-9]', '')}"

      - label: Object.Identity_Card
        condition: "${CPF_Responsavel?.trim()?.length() > 0 }"
        name: cpf_responsavel
        props:
          Id_Value:
            val: "${CPF_Responsavel.replaceAll('[^0-9]','')}"
            mandatoryInSearch: true
          Id_Type:
            val: "CPF"
            excludeFromSearch: true

      - label: Person.Natural
        condition: "${Nome_do_Coordenador?.trim()?.length() > 0 && CPF_do_Coordenador?.trim()?.length() > 0 }"
        name: coordenador
        props:
          Full_Name: "${Nome_do_Coordenador?.trim().toUpperCase()}"
          Type:
            val: "colaborador"
            excludeFromSearch: true
          Customer_ID: "${CPF_do_Coordenador?.replaceAll('[^0-9]', '')}"

      - label: Object.Identity_Card
        condition: "${CPF_do_Coordenador?.trim()?.length() > 0 }"
        name: cpf_coordenador
        props:
          Id_Value:
            val: "${CPF_do_Coordenador?.replaceAll('[^0-9]', '')}"
            mandatoryInSearch: true
          Id_Type:
            val: "CPF"
            excludeFromSearch: true

      - label: Object.Identity_Card
        name: cpf
        props:
          Id_Value:
            val: "${CPF.replaceAll('[^0-9]','')}"
            mandatoryInSearch: true
          Id_Type:
            val: "CPF"
            excludeFromSearch: true


      - label: Object.Email_Address
        condition: "${(Email != null) && !(Email.isEmpty())}"
        props:
          Email: "${Email?.trim()?.toLowerCase()}"

      - label: Location.Address
        props:
          Full_Address: "${Tipo_Endereco}${N?', ' + N + ' ':''}${Complemento?:''} ${Bairro?', ' + Bairro + ' ':''}${Municipio02?:''}${CEP?' '+CEP:''}"
          Type:
            val: "${(Domiciliado_no_Exterior=='Não')?'Endereço Brasil':'Endereço Exterior'}"
            excludeFromSearch: true


      - label: Event.Ingestion
        props:
          Type:
            val: ADP
            excludeFromSearch: true

          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true

          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true

          Metadata_Create_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Object.Data_Source
        props:
          Name:
            val: ADP
            mandatoryInSearch: true
            excludeFromUpdate: false

          Description:
            val: Dados ADP RH de Colaboradores
            mandatoryInSearch: false
            excludeFromUpdate: false

          Type:
            val: Structured
            mandatoryInSearch: false
            excludeFromUpdate: false

      - label: Event.Group_Ingestion
        props:
          Type:
            val: ADP
            mandatoryInSearch: true
          Operation:
            val: Structured Data Insertion
            mandatoryInSearch: true
          Ingestion_Date:
            val: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"
            mandatoryInSearch: true
          Metadata_Start_Date:
            val: "${new Date()}"
            #            mandatoryInSearch: false
            excludeFromSearch: true
            type: java.util.Date
          Metadata_End_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date


      - label: Object.Phone_Number
        condition: "${Telefone?.trim()?.length() > 0}"
        name: telefone
        props:
          Raw:
            val: "${Telefone}"
            mandatoryInSearch: false
          Type:
            val: "Telefone Fixo"
            excludeFromSearch: true
          Numbers_Only:
            val: "${(Telefone?.replaceAll('[^0-9]', '')?:'00000000')}"
            excludeFromSearch: true
          Last_7_Digits:
            val: "${(((Telefone?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}"
            mandatoryInSearch: true

      - label: Object.Phone_Number
        condition: "${Telefone_Comercial?.trim()?.length() > 0}"
        name: telefone_comercial
        props:
          Raw:
            val: "${Telefone_Comercial}"
            mandatoryInSearch: false
          Type:
            val: "Telefone Comercial"
            excludeFromSearch: true
          Numbers_Only:
            val: "${(Telefone_Comercial?.replaceAll('[^0-9]', '')?:'00000000')}"
            excludeFromSearch: true
          Last_7_Digits:
            val: "${(((Telefone_Comercial?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}"
            mandatoryInSearch: true

#       Work In Progress
#      - label: Object.Phone_Number

    edges:
      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Object.Data_Source"
        toVertexLabel: "Event.Group_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event.Group_Ingestion"
        toVertexLabel: "Event.Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexName: "titular"
        toVertexLabel: "Event.Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Person.Employee"
        toVertexLabel: "Event.Ingestion"

      - label: "Is_Alias"
        fromVertexLabel: "Person.Employee"
        toVertexName: "titular"


        #        name: telefone_opcional
      - label: "Uses_Email"
        fromVertexName: "titular"
        toVertexLabel: "Object.Email_Address"

      - label: "Is_Located"
        fromVertexName: "titular"
        toVertexLabel: "Location.Address"




      - label: "Is_Subordinate"
        fromVertexName: "titular"
        toVertexName: "coordenador"

      - label: "Is_Responsible"
        fromVertexName: "responsavel"
        toVertexName: "titular"

      - label: "Has_Id_Card"
        fromVertexName: "titular"
        toVertexName: "cpf"

      - label: "Has_Id_Card"
        fromVertexName: "responsavel"
        toVertexName: "cpf_responsavel"

      - label: "Has_Id_Card"
        fromVertexName: "coordenador"
        toVertexName: "cpf_coordenador"


      - label: "Has_Phone"
        fromVertexName: "titular"
        toVertexName: "telefone"


      - label: "Has_Phone"
        fromVertexName: "titular"
        toVertexName: "telefone_comercial"
