---
rules:
  ADP:
    vertices:
      - label: Person.Natural
        name: titular
        props:
          Full_Name: "${Nome?.trim()?.toUpperCase()}"
          Type:
            val: "colaborador"
            excludeFromSearch: true
          Customer_ID: "${CPF?.replaceAll('[^0-9]', '')}"
          Date_Of_Birth:
            val: "${Data_de_Nascimento_Idade?.trim()}"
            type: "java.util.Date"
            mandatoryInSearch: true
            predicate: "eq"

      - label: Person.Natural
        condition: "${Nome_da_Mae?.trim()?.length() > 0}"
        name: mae
        props:
          Full_Name: "${Nome_da_Mae?.trim().toUpperCase()}"

      - label: Person.Natural
        condition: "${Nome_do_Pai?.trim()?.length() > 0}"
        name: pai
        props:
          Full_Name: "${Nome_do_Pai?.trim().toUpperCase()}"

      - label: Person.Employee
        name: colaborador
        props:
          ID: "${Matricula?.trim()}"
          Role:
            val: "${Cargo?.trim()}/${Funcao?.trim()}"
            excludeFromSearch: true

      - label: Person.Employee
        condition: "${Matricula_da_Chefia_Imediata?.replaceAll('[^0-9]', '')?.length() > 0}"
        name: chefe
        props:
          ID: "${Matricula_da_Chefia_Imediata?.replaceAll('[^0-9]', '')}"

      - label: Person.Natural
        condition: "${Nome_do_Responsavel_Legal?.trim()?.length() > 0 && CPF_do_Responsavel_Legal?.replaceAll('[^0-9]', '')?.length() > 0 }"
        name: responsavel
        props:
          Full_Name: "${Nome_do_Responsavel_Legal?.trim().toUpperCase()}"
          Customer_ID: "${CPF_do_Responsavel_Legal?.replaceAll('[^0-9]', '')}"

      - label: Object.Identity_Card
        condition: "${CPF_do_Responsavel_Legal?.replaceAll('[^0-9]', '')?.length() > 0 }"
        name: cpf_responsavel
        props:
          Id_Value: "${CPF_do_Responsavel_Legal.replaceAll('[^0-9]','')}"
          Id_Type:
            val: "CPF"
            excludeFromSearch: true

      - label: Object.Identity_Card
        condition: "${RNE?.replaceAll('[^0-9]', '')?.length() > 0 }"
        name: rne
        props:
          Id_Value:
            val: "${RNE.replaceAll('[^0-9]','')}"
            mandatoryInSearch: true
          Id_Type:
            val: "RNE"
            excludeFromSearch: true

      - label: Person.Natural
        condition: "${Nome_do_Coordenador?.trim()?.length() > 0 && CPF_do_Coordenador?.replaceAll('[^0-9]', '')?.length() > 0 }"
        name: coordenador
        props:
          Full_Name: "${Nome_do_Coordenador?.trim().toUpperCase()}"
          Type:
            val: "colaborador"
            excludeFromSearch: true
          Customer_ID: "${CPF_do_Coordenador?.replaceAll('[^0-9]', '')}"

      - label: Object.Identity_Card
        condition: "${CPF_do_Coordenador?.replaceAll('[^0-9]', '')?.length() > 0 }"
        name: cpf_coordenador
        props:
          Id_Value: "${CPF_do_Coordenador?.replaceAll('[^0-9]', '')}"
          Id_Type:
            val: "CPF"
            excludeFromSearch: true

      - label: Object.Identity_Card
        condition: "${CPF?.replaceAll('[^0-9]','')?.length() > 0}"
        name: cpf
        props:
          Id_Value:
            val: "${CPF?.replaceAll('[^0-9]','')}"
            mandatoryInSearch: true
          Id_Type:
            val: "CPF"
            excludeFromSearch: true

      - label: Object.Identity_Card
        condition: "${Identidade___Orgao_Emissor___UF?.replaceAll('[^0-9]','')?.length() > 0}"
        name: rg
        props:
          Id_Value: "${Identidade___Orgao_Emissor___UF?.replaceAll('[^0-9]','')}"
          Id_Text:
            val: "${Identidade___Orgao_Emissor___UF}"
            excludeFromSearch: true
          Id_Type:
            val: "RG"
            excludeFromSearch: true

      - label: Object.Email_Address
        condition: "${(Email != null) && !(Email.isEmpty())}"
        nome: email
        props:
          Email: "${Email?.trim()?.toLowerCase()}"

      - label: Object.Email_Address
        condition: "${(E_Mail_Opcional != null) && !(E_Mail_Opcional.isEmpty())}"
        name: email_opcional
        props:
          Email: "${E_Mail_Opcional?.trim()?.toLowerCase()}"

      - label: Location.Address
        props:
          Full_Address: "${Tipo___Endereco}${N?', ' + N + ' ':''}${Complemento?:''} ${Bairro?', ' + Bairro + ' ':''}${Municipio02?:''}${CEP?' '+CEP:''}"
          Type:
            val: "${(Domiciliado_no_Exterior=='Não')?'Endereço Brasil':'Endereço Exterior'}"
            excludeFromSearch: true

      - label: Object.Phone_Number
        condition: "${Telefone?.replaceAll('[^0-9]', '')?.length() >= 7}"
        name: telefone
        props:
          Raw:
            val: "${Telefone}"
            mandatoryInSearch: false
          Type:
            val: "Telefone"
            excludeFromSearch: true
          Numbers_Only:
            val: "${(Telefone?.replaceAll('[^0-9]', '')?:'00000000')}"
            excludeFromSearch: true
          Last_7_Digits:
            val: "${(((Telefone?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}"
            mandatoryInSearch: true

      - label: Object.Phone_Number
        condition: "${Telefone_Comercial?.trim()?.length() >= 7}"
        name: telefone_comercial
        props:
          Raw:
            val: "${Telefone_Comercial}"
            mandatoryInSearch: false
          Type:
            val: "Telefone Comercial"
            excludeFromSearch: true
          Numbers_Only:
            val: "${(Telefone_Comercial?.replaceAll('[^0-9]', '')?:'00000000')}"
            excludeFromSearch: true
          Last_7_Digits:
            val: "${(((Telefone_Comercial?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}"
            mandatoryInSearch: true

      - label: Object.Phone_Number
        condition: "${Telefone_Opcional?.trim()?.length() >= 7}"
        name: telefone_comercial
        props:
          Raw:
            val: "${Telefone_Opcional}"
            mandatoryInSearch: false
          Type:
            val: "Telefone Opcional"
            excludeFromSearch: true
          Numbers_Only:
            val: "${(Telefone_Opcional?.replaceAll('[^0-9]', '')?:'00000000')}"
            excludeFromSearch: true
          Last_7_Digits:
            val: "${(((Telefone_Opcional?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}"
            mandatoryInSearch: true

      - label: Object.Phone_Number
        condition: "${Outros_Telefones?.trim()?.length() >= 7}"
        name: telefone_comercial
        props:
          Raw:
            val: "${Outros_Telefones}"
            mandatoryInSearch: false
          Type:
            val: "Outros Telefones"
            excludeFromSearch: true
          Numbers_Only:
            val: "${(Outros_Telefones?.replaceAll('[^0-9]', '')?:'00000000')}"
            excludeFromSearch: true
          Last_7_Digits:
            val: "${(((Outros_Telefones?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}"
            mandatoryInSearch: true

      - label: Event.Ingestion
        props:
          Type:
            val: "ADP"
            excludeFromSearch: true
          Operation:
            val: "Structured Data Insertion"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Object.Data_Source
        props:
          Name: "ADP"
          Description: "Dados RH Colaboradores ADP"
          Type: "Structured Data Insertion"

      - label: Event.Group_Ingestion
        props:
          Type: "ADP"
          Operation: "Structured Data Insertion"
          Ingestion_Date: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"
          Metadata_Start_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date
          Metadata_End_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date

    edges:
      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Object.Data_Source"
        toVertexLabel: "Event.Group_Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexLabel: "Event.Group_Ingestion"
        toVertexLabel: "Event.Ingestion"

      - label: "Has_Ingestion_Event"
        fromVertexName: "titular"
        toVertexLabel: "Event.Ingestion"

      - label: "Is_Alias"
        fromVertexName: "titular"
        toVertexLabel: "colaborador"

      - label: "Is_Subordinate"
        fromVertexName: "chefe"
        toVertexName: "colaborador"

      - label: "Uses_Email"
        fromVertexName: "titular"
        toVertexName: "email"

      - label: "Uses_Email"
        fromVertexName: "titular"
        toVertexName: "email_opcional"

      - label: "Is_Located"
        fromVertexName: "titular"
        toVertexLabel: "Location.Address"

      - label: "Is_Subordinate"
        fromVertexName: "colaborador"
        toVertexName: "coordenador"

      - label: "Is_Responsible"
        fromVertexName: "responsavel"
        toVertexName: "colaborador"

      - label: "Has_Id_Card"
        fromVertexName: "titular"
        toVertexName: "cpf"

      - label: "Has_Id_Card"
        fromVertexName: "titular"
        toVertexName: "rg"

      - label: "Has_Id_Card"
        fromVertexName: "titular"
        toVertexName: "rne"

      - label: "Has_Id_Card"
        fromVertexName: "responsavel"
        toVertexName: "cpf_responsavel"

      - label: "Has_Id_Card"
        fromVertexName: "coordenador"
        toVertexName: "cpf_coordenador"

      - label: "Has_Phone"
        fromVertexName: "titular"
        toVertexName: "telefone"

      - label: "Has_Phone"
        fromVertexName: "titular"
        toVertexName: "telefone_comercial"

      - label: "Has_Phone"
        fromVertexName: "titular"
        toVertexName: "telefone_opcional"

      - label: "Has_Phone"
        fromVertexName: "titular"
        toVertexName: "outros_telefones"

      - label: "Has_Parent_Or_Guardian"
        fromVertexName: "titular"
        toVertexName: "mae"

      - label: "Has_Parent_Or_Guardian"
        fromVertexName: "titular"
        toVertexName: "pai"
