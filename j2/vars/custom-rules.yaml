
rules:


  #    {
  #      "A1_END": "sss",
  #      "A1_TEL": "sss",
  #      "A1_EMAIL": "sss",
  #      "A1_PFISICA": "sss",
  #      "A1_RG": "sss",
  #      "A1_BAIRRO": "VL SAO VICENTE",
  #      "A1_ESTADO": "sss",
  #      "A1_CEP": "15500117",
  #      "lastUpdate": "2016-08-29T09:12:33.001Z",
  #      "A1_CGC": "58952390806",
  #      "A1_COD_MUN": "sss",
  #      "A1_NOME": "sss",
  #      "id": "id",
  #      "firstEntry": "2016-08-29T09:12:33.001Z",
  #      "A1_DDD": "sss",
  #      "A1_EST": "sss",
  #      "A1_MUN": "sss"
  #    }
  totvs_protheus_sa1_clientes:
    vertices:
      - label: Person.Natural
        props:
          Full_Name: "${pg_A1_NOME?.trim()?.toUpperCase()}"
          Full_Name_fuzzy: "${pg_A1_NOME?.trim()?.toUpperCase()}"
          Type:
            val: "Clientes"
            excludeFromSearch: true

          Customer_ID:
            val: "${pg_id}"
            mandatoryInSearch: true
            predicate: "eq"


        #CELULAR
      - label: Object.Phone_Number
        props:
          Raw:
            val: "${pg_A1_TEL}"
            mandatoryInSearch: false
          Type:
            val: "Office"
            excludeFromSubsequenceSearch: true
          Numbers_Only:
            val: "${(pg_A1_TEL?.replaceAll('[^0-9]', '')?:'00000000')}"
            excludeFromSearch: true
            type: "[Ljava.lang.String;"
          Last_7_Digits:
            val: "${(((pg_A1_TEL?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}"
            mandatoryInSearch: true
            type: "[Ljava.lang.String;"

      #RG
      - label: Object.Identity_Card
        props:
          Id_Value:
            val: "${pg_A1_RG?.trim()?.toUpperCase()}"
            mandatoryInSearch: true
          Id_Type:
            val: "RG"
            excludeFromSearch: true

      # EMAIL
      - label: Object.Email_Address
        props:
          Email:  "${pg_A1_EMAIL}"

      #ENDERECO,BAIRRO,CIDADE,UF,CEP
      - label: Location.Address
        props:
          Full_Address: "${pg_A1_END}, ${pg_A1_BAIRRO},  ${pg_A1_MUN} - ${pg_A1_ESTADO}, ${pg_A1_CEP}"
          Type:
            val: "Business"
            excludeFromSearch: true

      - label: Event.Ingestion
        props:
          Type:
            val: totvs/proteus/sa1_clientes
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${pg_firstEntry}"
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${pg_lastUpdate}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event.Group_Ingestion
        props:
          Metadata_Start_Date:
            val: "${pg_currDate}"
            mandatoryInSearch: true
            excludeFromSearch: false
            type: java.util.Date
          Metadata_End_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date
          Type:
            val: totvs/proteus/sa1_clientes
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
      - label: Object.Data_Source
        props:
          Name: totvs/proteus/sa1_clientes
          Type: totvs/proteus/sa1_clientes
          Description: Registros de Clientes no Proteus/Totvs
    edges:
      - label: Has_Ingestion_Event
        fromVertexLabel: Person.Natural
        toVertexLabel: Event.Ingestion
      - label: Has_Ingestion_Event
        fromVertexLabel: Event.Group_Ingestion
        toVertexLabel: Event.Ingestion
      - label: Has_Ingestion_Event
        toVertexLabel: Event.Group_Ingestion
        fromVertexLabel: Object.Data_Source


      - label: "Uses_Email"
        fromVertexLabel: "Person.Natural"
        toVertexLabel: "Object.Email_Address"

      - label: "Has_Id_Card"
        fromVertexLabel: "Person.Natural"
        toVertexLabel: "Object.Identity_Card"

      - label: "Works"
        fromVertexLabel: "Person.Natural"
        toVertexLabel: "Location.Address"

      - label: "Lives"
        fromVertexLabel: "Person.Natural"
        toVertexLabel: "Location.Address"

  #    {
  #      "id": "string",
  #      "lastUpdate": {},
  #      "firstEntry": {},
  #      "RA_APELIDO": "",
  #      "RA_BAIRRO": "Rua Da Ponte",
  #      "RA_BITMAP": "9328",
  #      "RA_BRPDH": "3",
  #      "RA_CEP": "333333",
  #      "RA_CEPCXPO": "",
  #      "RA_CIC": "333333333",
  #      "RA_CODMUN": "3333",
  #      "RA_CODMUNE": "AP 33",
  #      "RA_COMPLEM": "",
  #      "RA_COMPLRG": "",
  #      "RA_CPOSTAL": "33333-7",
  #      "RA_CTDEPSA": "",
  #      "RA_CTDPFGT": "2",
  #      "RA_CTPCD": "11",
  #      "RA_DDDCELU": "",
  #      "RA_DDDFONE": "2",
  #      "RA_DEFIFIS": "BRUNO.SSSS@SUNNYVALE.COM.BR",
  #      "RA_DESCSIN": "BRUNO.SSSS@HOTMAIL.COM",
  #      "RA_EMAIL": "R. CONTINENTAL",
  #      "RA_EMAIL2": "SP",
  #      "RA_ENDEREC": "",
  #      "RA_ESTADO": "",
  #      "RA_FOLCERT": "",
  #      "RA_HABILIT": "CONTINENTAL",
  #      "RA_HABILMT": "842",
  #      "RA_LIVCERT": "R",
  #      "RA_LOGRDSC": "MARIA AMANDA S PAIVA SSSSS",
  #      "RA_LOGRNUM": "SAO BERNARDO DO CAMP",
  #      "RA_LOGRTP": "BRUNO EEEE FFFF SSSSS",
  #      "RA_LOGRTPD": "BRUNO EEEE FFFF SSSSS",
  # x    "RA_MAE": "",
  #      "RA_MUNICIP": "993166800",
  #      "RA_NOME": "10707",
  # x     "RA_NOMECMP": "842",
  #      "RA_NSOCIAL": "",
  #      "RA_NUMCELU": "",
  #      "RA_NUMCP": "",
  #      "RA_NUMENDE": "0x2020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202000",
  #      "RA_NUMEPAS": "PAULO FRIAS FERRARI",
  #      "RA_NUMINSC": "",
  #      "RA_NUMRIC": "14430024193",
  #      "RA_OBSDEFI": "",
  #      "RA_PAI": "",
  #      "RA_PAISEXN": "2",
  #      "RA_PAISEXT": "",
  #      "RA_PIS": "",
  #      "RA_PLAPRE": "40293563686",
  #      "RA_PORTDEF": "543838778",
  #      "RA_RACACOR": "",
  #      "RA_REGCIVI": "162",
  #      "RA_REGISTR": "439",
  #      "RA_RESERVI": "",
  #      "RA_RG": "M",
  #      "RA_RNE": "",
  #      "RA_SECAO": "2",
  #      "RA_SERCP": "418473460132",
  #      "RA_SERVENT": "0",
  # x     "RA_SEXO": "284",
  #      "RA_TELEFON": "",
  #      "RA_TIPENDE": "",
  #      "RA_TITULOE": "",
  #      "RA_TPDEFFI": "",
  #      "RA_ZONASEC": ""
  #    }
  totvs_protheus_ra_funcionario:
    vertices:
      - label: Person.Natural
        props:
          Full_Name: "${pg_RA_NOMECMP?.trim()?.toUpperCase()}"
          Full_Name_fuzzy: "${pg_RA_NOMECMP?.trim()?.toUpperCase()}"
          Type:
            val: "Funcionarios"
            excludeFromSearch: true
          Gender: "${pg_RA_SEXO}"
          Customer_ID:
            val: "${pg_id}"
            mandatoryInSearch: true
            predicate: "eq"

      - label: Person.Natural
        props:
          Full_Name: "${pg_RA_MAE?.trim()?.toUpperCase()}"
          Full_Name_fuzzy: "${pg_RA_MAE?.trim()?.toUpperCase()}"
          Type:
            val: "Funcionarios-Mae"
            excludeFromSearch: true
          Gender: "${pg_RA_SEXO}"
          Customer_ID:
            val: "${pg_id}"
            mandatoryInSearch: true
            predicate: "eq"

        #CELULAR
      - label: Object.Phone_Number
        props:
          Raw:
            val: "${pg_RA_TELEFON}"
            mandatoryInSearch: false
          Type:
            val: "Office"
            excludeFromSubsequenceSearch: true
          Numbers_Only:
            val: "${(pg_RA_TELEFON?.replaceAll('[^0-9]', '')?:'00000000')}"
            excludeFromSearch: true
            type: "[Ljava.lang.String;"
          Last_7_Digits:
            val: "${(((pg_RA_TELEFON?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}"
            mandatoryInSearch: true
            type: "[Ljava.lang.String;"

      #RG
      - label: Object.Identity_Card
        props:
          Id_Value:
            val: "${pg_RA_RG?.trim()?.toUpperCase()}"
            mandatoryInSearch: true
          Id_Type:
            val: "RG"
            excludeFromSearch: true

      # EMAIL
      - label: Object.Email_Address
        props:
          Email:  "${pg_A1_EMAIL}"

      #ENDERECO,BAIRRO,CIDADE,UF,CEP
      - label: Location.Address
        props:
          Full_Address: "${pg_A1_END}, ${pg_A1_BAIRRO},  ${pg_A1_MUN} - ${pg_A1_ESTADO}, ${pg_A1_CEP}"
          Type:
            val: "Business"
            excludeFromSearch: true

      - label: Event.Ingestion
        props:
          Type:
            val: totvs/proteus/sa1_clientes
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${pg_firstEntry}"
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${pg_lastUpdate}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event.Group_Ingestion
        props:
          Metadata_Start_Date:
            val: "${pg_currDate}"
            mandatoryInSearch: true
            excludeFromSearch: false
            type: java.util.Date
          Metadata_End_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date
          Type:
            val: totvs/proteus/sa1_clientes
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
      - label: Object.Data_Source
        props:
          Name: totvs/proteus/sa1_clientes
          Type: totvs/proteus/sa1_clientes
          Description: Registros de Clientes no Proteus/Totvs
    edges:
      - label: Has_Ingestion_Event
        fromVertexLabel: Person.Natural
        toVertexLabel: Event.Ingestion
      - label: Has_Ingestion_Event
        fromVertexLabel: Event.Group_Ingestion
        toVertexLabel: Event.Ingestion
      - label: Has_Ingestion_Event
        toVertexLabel: Event.Group_Ingestion
        fromVertexLabel: Object.Data_Source

      - label: "Has_Phone"
        fromVertexLabel: "Person.Natural"
        toVertexLabel: "Object.Phone_Number"


      - label: "Uses_Email"
        fromVertexLabel: "Person.Natural"
        toVertexLabel: "Object.Email_Address"

      - label: "Has_Id_Card"
        fromVertexLabel: "Person.Natural"
        toVertexLabel: "Object.Identity_Card"

      - label: "Works"
        fromVertexLabel: "Person.Natural"
        toVertexLabel: "Location.Address"

      - label: "Lives"
        fromVertexLabel: "Person.Natural"
        toVertexLabel: "Location.Address"






  #   {
  #      "id": "string",
  #      "lastUpdate": {},
  #      "firstEntry": {},
  #      "A2_CEP": "8560335",
  #      "A2_CGC": "24984436333120",
  #      "A2_COMPLEM": "NIRE 35.8.1939897-6",
  #      "A2_COMPLR": "",
  #      "A2_CONTATO": "JUCELINO",
  #      "A2_CONTCOM": "",
  #      "A2_CPFIRP": "",
  #      "A2_CX_POST": "",
  #      "A2_EMAIL": "jkssias@hotmail.com",
  #      "A2_END": "RUA LEON PEREIRA DA COSTA",
  #      "A2_ENDCOMP": "",
  #      "A2_HPAGE": "",
  #      "A2_LOGEX": "",
  #      "A2_NEMPR": "",
  #      "A2_NOME": "CLEUSA PAIVA PIO GOMES OLIVEIRA DIA",
  #      "A2_NOMFAV": "",
  #      "A2_NOMRESP": "MUSCLE MANUTENCAO E R",
  #      "A2_NREDUZ": "",
  #      "A2_NR_END": "",
  #      "A2_NUMEX": "",
  #      "A2_PFISICA": "",
  #      "A2_REPCONT": "",
  #      "A2_REPRCEP": "",
  #      "A2_REPRES": "",
  #      "A2_REPRTEL": "",
  #      "A2_REPR_EM": "",
  #      "A2_REPR_EN": "98561-1525",
  #      "A2_TEL": "",
  #      "A2_TELRE": ""
  #    }

  totvs_protheus_sa2_fornecedor:
    vertices:
      - label: Person.Natural
        props:
          Full_Name: "${pg_A2_NOME?.trim()?.toUpperCase()}"
          Full_Name_fuzzy: "${pg_A2_NOME?.trim()?.toUpperCase()}"
          Type:
            val: "Fornecedor"
            excludeFromSearch: true
          #          Name_Qualifier: "${pg_CORRETOR}"

          Customer_ID:
            val: "${pg_id}"
            mandatoryInSearch: true
            predicate: "eq"


        #CELULAR
      - label: Object.Phone_Number
        props:
          Raw:
            val: "${pg_A2_TEL}"
            mandatoryInSearch: false
          Type:
            val: "Office"
            excludeFromSubsequenceSearch: true
          Numbers_Only:
            val: "${(pg_A2_TEL?.replaceAll('[^0-9]', '')?:'00000000')}"
            excludeFromSearch: true
            type: "[Ljava.lang.String;"
          Last_7_Digits:
            val: "${(((pg_A2_TEL?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}"
            mandatoryInSearch: true
            type: "[Ljava.lang.String;"

      #RG
      - label: Object.Identity_Card
        props:
          Id_Value:
            #            val: "${pg_A1_RG.replaceAll('[^0-9]','')}"
            val: "${pg_A1_RG?.trim()?.toUpperCase()}"
            mandatoryInSearch: true
          Id_Type:
            val: "RG"
            excludeFromSearch: true

      # EMAIL
      - label: Object.Email_Address
        props:
          Email:  "${pg_A1_EMAIL}"

      #ENDERECO,BAIRRO,CIDADE,UF,CEP
      - label: Location.Address
        props:
          Full_Address: "${pg_A1_END}, ${pg_A1_BAIRRO},  ${pg_A1_MUN} - ${pg_A1_ESTADO}, ${pg_A1_CEP}"
          Type:
            val: "Business"
            excludeFromSearch: true

      - label: Event.Ingestion
        props:
          Type:
            val: totvs/proteus/sa1_clientes
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${pg_firstEntry}"
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${pg_lastUpdate}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event.Group_Ingestion
        props:
          Metadata_Start_Date:
            val: "${pg_currDate}"
            mandatoryInSearch: true
            excludeFromSearch: false
            type: java.util.Date
          Metadata_End_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date
          Type:
            val: totvs/proteus/sa1_clientes
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
      - label: Object.Data_Source
        props:
          Name: totvs/proteus/sa1_clientes
          Type: totvs/proteus/sa1_clientes
          Description: Registros de Clientes no Proteus/Totvs
    edges:
      - label: Has_Ingestion_Event
        fromVertexLabel: Person.Natural
        toVertexLabel: Event.Ingestion
      - label: Has_Ingestion_Event
        fromVertexLabel: Event.Group_Ingestion
        toVertexLabel: Event.Ingestion
      - label: Has_Ingestion_Event
        toVertexLabel: Event.Group_Ingestion
        fromVertexLabel: Object.Data_Source


      - label: "Uses_Email"
        fromVertexLabel: "Person.Natural"
        toVertexLabel: "Object.Email_Address"

      - label: "Has_Id_Card"
        fromVertexLabel: "Person.Natural"
        toVertexLabel: "Object.Identity_Card"

      - label: "Works"
        fromVertexLabel: "Person.Natural"
        toVertexLabel: "Location.Address"

      - label: "Lives"
        fromVertexLabel: "Person.Natural"
        toVertexLabel: "Location.Address"
