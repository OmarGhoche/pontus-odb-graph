rules:

  ploomes_clientes:
    vertices:
      - label: Person.Natural
        condition: "${TypeId == 2 && Name != null}"
        props:
          Full_Name:
            val: "${Name?.trim()?.toUpperCase()}"
            mandatoryInSearch: true
          Customer_ID:
            val: "${CPF?.replaceAll('[^0-9]', '')}"
            mandatoryInSearch: true
          Type:
            val: "Clientes"
            excludeFromSearch: true
      #          Id: "${RoleId}"

      - label: Person.Organisation
        condition: "${TypeId == 1 && CNPJ != null && Name != null}"
        props:
          Registration_Number:
            val: "${CNPJ?.replaceAll('[^0-9]', '')}"
            mandatoryInSearch: true
          Name: "${(LegalName?.trim()?.length() > 0)?LegalName?.trim().toUpperCase():Name?.trim().toUpperCase() }"
          Short_Name: "${Name}"
          Id:
            val: "${CNPJ?.replaceAll('[^0-9]', '')}"
            mandatoryInSearch: true
          Email: "${Email?.trim()?.toLowerCase()}"


      - label: Object.Identity_Card
        condition: "${TypeId == 2  && CPF != null}"
        props:
          Id_Value:
            val: "${CPF?.replaceAll('[^0-9]', '')}"
            mandatoryInSearch: true
          Id_Type:
            val: "CPF"
            excludeFromSearch: true

      # EMAIL
      - label: Object.Email_Address
        condition: "${Email?.trim()?.length() > 0 }"
        props:
          Email: "${Email?.trim()?.toLowerCase()}"

      #ENDERECO,BAIRRO,CIDADE,UF,CEP
      - label: Location.Address
        condition: "${StreetAddress != null}"
        props:
          Full_Address:
            val: "${StreetAddress} ${StreetAddressNumber} ${StreetAddressLine2?:''}, ${Neighborhood}, ${CityId} - ${StateId}, ${ZipCode}"
            excludeFromSearch: true
#          Type:
#            val: "Business"
#            excludeFromSearch: true
          parser:
            val: "${StreetAddress} ${StreetAddressNumber} ${StreetAddressLine2?:''}, ${Neighborhood}, ${CityId} - ${StateId}, ${ZipCode}"
            type: "com.pontusvision.utils.LocationAddress"
          Post_Code: "${com.pontusvision.utils.PostCode.format(ZipCode)}"

      - label: Event.Ingestion
        props:
          Type:
            val: ploomes/clientes
            excludeFromSearch: true
          Operation:
            val: Structured Data Insertion
            excludeFromSearch: true
          Domain_b64:
            val: "${original_request?.bytes?.encodeBase64()?.toString()}"
            excludeFromSearch: true
          Metadata_Create_Date:
            val: "${CreateDate}"
            excludeFromSearch: true
            type: java.util.Date
          Metadata_Update_Date:
            val: "${LastUpdateDate}"
            excludeFromSearch: true
            type: java.util.Date

      - label: Event.Group_Ingestion
        props:
          Type:
            val: ploomes/clientes
            mandatoryInSearch: true
          Operation:
            val: Structured Data Insertion
            mandatoryInSearch: true
          Ingestion_Date:
            val: "${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}"
            mandatoryInSearch: true
          Metadata_Start_Date:
            val: "${new Date()}"
            #            mandatoryInSearch: false
            excludeFromSearch: true
            type: java.util.Date
          Metadata_End_Date:
            val: "${new Date()}"
            excludeFromSearch: true
            type: java.util.Date





      - label: Object.Data_Source
        props:
          Name: ploomes/clientes
          Type: ploomes/clientes
          Description: Registros de Clientes no protheus/Totvs
    edges:
      - label: Has_Ingestion_Event
        fromVertexLabel: Person.Natural
        toVertexLabel: Event.Ingestion
      - label: Has_Ingestion_Event
        fromVertexLabel: Person.Organisation
        toVertexLabel: Event.Ingestion
      - label: Has_Ingestion_Event
        fromVertexLabel: Event.Group_Ingestion
        toVertexLabel: Event.Ingestion
      - label: Has_Ingestion_Event
        toVertexLabel: Event.Group_Ingestion
        fromVertexLabel: Object.Data_Source


      - label: "Uses_Email"
        fromVertexLabel: "Person.Natural"
        toVertexLabel: "Object.Email_Address"
      - label: "Uses_Email"
        fromVertexLabel: "Person.Organisation"
        toVertexLabel: "Object.Email_Address"

      - label: "Has_Id_Card"
        fromVertexLabel: "Person.Natural"
        toVertexLabel: "Object.Identity_Card"

      - label: "Is_Located"
        fromVertexLabel: "Person.Natural"
        toVertexLabel: "Location.Address"

      - label: "Is_Located"
        fromVertexLabel: "Person.Organisation"
        toVertexLabel: "Location.Address"
