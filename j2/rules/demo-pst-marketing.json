{
  "updatereq": {
    "vertices": [
      {
        "label": "Person.Natural",
        "props": [
          {
            "name": "Person.Natural.Full_Name",
            "val": "${pg_FirstName?.toUpperCase()?.trim()} ${pg_LastName?.toUpperCase()?.trim()}",
            "predicate": "eq",
            "mandatoryInSearch": true
          },
          {
            "name": "Person.Natural.Full_Name_fuzzy",
            "val": "${pg_FirstName?.toUpperCase()?.trim()} ${pg_LastName?.toUpperCase()?.trim()}",
            "excludeFromSearch": true
          },
          {
            "name": "Person.Natural.Last_Name",
            "val": "${pg_LastName?.toUpperCase()?.trim()}",
            "excludeFromSubsequenceSearch": true
          },
          {
            "name": "Person.Natural.Date_Of_Birth",
            "val": "${pg_Birthdate?:'1666-01-01'}",
            "type": "java.util.Date",
            "mandatoryInSearch": false,
            "excludeFromSubsequenceSearch": true
          },
          {
            "name": "Person.Natural.Title",
            "val": "${pg_Salutation?:''}",
            "excludeFromSearch": true
          },
          {
            "name": "Person.Natural.Nationality",
            "val": "${pg_MailingCountry?:'Unknown'}",
            "excludeFromSearch": true
          },
          {
            "name": "Person.Natural.Gender",
            "val": "${('MR.' == pg_Salutation?.toUpperCase())? 'MALE':'FEMALE'}",
            "mandatoryInSearch": false,
            "excludeFromSubsequenceSearch": true
          }
        ]
      },
       {
    "label": "Person.Identity",
    "percentageThreshold": 95.0,
    "props":
    [
      {
      "name": "Person.Identity.Full_Name",
       "val": "${pg_FirstName?.toUpperCase()?.trim()} ${pg_LastName?.toUpperCase()?.trim()}",
       "predicate": "eq",
       "mandatoryInSearch": true,
       "matchWeight": 500
      }
     ,{
      "name": "Person.Identity.Full_Name_fuzzy",
       "val": "${pg_FirstName?.toUpperCase()?.trim()} ${pg_LastName?.toUpperCase()?.trim()}",
       "mandatoryInSearch": true,
       "predicate": "idxRaw:Person.Identity.MixedIdx",
       "postProcessor": "v.'Person.Identity.Full_Name_fuzzy':${it?.trim()}~",
       "matchWeight": 50
      }
     ,{
      "name": "Person.Identity.Last_Name",
       "val": "${pg_LastName?.toUpperCase()?.trim()}",
       "mandatoryInSearch": true,
       "matchWeight": 500
      }
     ,{
      "name": "Person.Identity.Date_Of_Birth",
       "val": "${pg_Birthdate?:'1999-01-01'}",
       "type": "java.util.Date",
       "mandatoryInSearch": true,
       "matchWeight": 500
      }
     ,{
      "name": "Person.Identity.Gender",
       "val": "${('MR.' == pg_Salutation?.toUpperCase())? 'MALE':'FEMALE'}",
       "excludeFromSearch": true
      }
     ,{
      "name": "Person.Identity.ID",
       "val": "${pg_Id}",
       "mandatoryInSearch": true,
       "matchWeight": 5000
      }
     ,{
      "name": "Person.Identity.Title",
       "val": "${pg_Salutation?:''}",
       "excludeFromSearch": true
      }
     ,{
      "name": "Person.Identity.Nationality",
       "val": "${pg_MailingCountry?:'Unknown'}",
       "excludeFromSearch": true
      }
    ]
    },
      {
        "label": "Location.Address",
        "percentageThreshold": 95.0,
        "props": [
          {
            "name": "Location.Address.Full_Address",
            "val": "${ ( (pg_MailingStreet?:'')+ ' ' + (pg_MailingCity?:'') + ' ' + (pg_MailingState?:'') + ' ' + (pg_MailingPostalCode?:'') + ' ' + (pg_MailingCountry?:'UK')) }",
            "mandatoryInSearch": true,
            "matchWeight": 1
          },
          {
            "name": "Location.Address.parser",
            "val": "${ ( (pg_MailingStreet?:'')+ ' ' + (pg_MailingCity?:'') + ' ' + (pg_MailingState?:'') + ' ' + (pg_MailingPostalCode?:'') + ' ' + (pg_MailingCountry?:'UK')) }",
            "excludeFromSearch": true,
            "type": "com.pontusvision.utils.LocationAddress",
            "matchWeight": 1
          },
          {
            "name": "Location.Address.Post_Code",
            "val": "${com.pontusvision.utils.PostCode.format(pg_MailingPostalCode)}",
            "mandatoryInSearch": true,
            "matchWeight": 500
          }
        ]
      },
      {
        "label": "Object.Email_Address",
        "condition": "${pg_Email != null &amp;&amp;  pg_Email != ''}",
        "percentageThreshold": 95.0,
        "props": [
          {
            "name": "Object.Email_Address.Email",
            "val": "${pg_Email}",
            "mandatoryInSearch": true,
            "matchWeight": 500
          }
        ]
      },
      {
        "label": "Object.Phone_Number",
        "props": [
          {
            "name": "Object.Phone_Number.Raw",
            "val": "${pg_Phone}",
            "mandatoryInSearch": false
          },
          {
            "name": "Object.Phone_Number.Type",
            "val": "Work",
            "excludeFromSubsequenceSearch": true
          },
          {
            "name": "Object.Phone_Number.Numbers_Only",
            "val": "${(pg_Phone?.replaceAll('[^0-9]', '')?:'00000000')}",
            "excludeFromSearch": true,
                        "type":"[Ljava.lang.String;"


          },
          {
            "name": "Object.Phone_Number.Last_7_Digits",
            "val": "${(((pg_Phone?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}",
            "mandatoryInSearch": true,
                        "type":"[Ljava.lang.String;"

          }
        ]
      },
      {
        "label": "Object.Data_Source",
        "props": [
          {
            "name": "Object.Data_Source.Name",
            "val": "salesforce.com",
            "mandatoryInSearch": true,
            "excludeFromUpdate": false
          }
         ,{
                "name": "Object.Data_Source.Type",
                "val": "Structured",
                "mandatoryInSearch": false,
                "excludeFromUpdate": false
          }

        ]
      },
      {
        "label": "Event.Group_Ingestion",
        "props": [
          {
            "name": "Event.Group_Ingestion.Metadata_Start_Date",
            "val": "${pg_currDate}",
            "mandatoryInSearch": true,
            "excludeFromSearch": false,
            "type": "java.util.Date"
          },
          {
            "name": "Event.Group_Ingestion.Metadata_End_Date",
            "val": "${new Date()}",
            "excludeFromSearch": true,
            "type": "java.util.Date"
          },
          {
            "name": "Event.Group_Ingestion.Type",
            "val": "Marketing Email System",
            "excludeFromSearch": true
          },
          {
            "name": "Event.Group_Ingestion.Operation",
            "val": "Structured Data Insertion",
            "excludeFromSearch": true
          }
        ]
      },
      {
        "label": "Event.Ingestion",
        "props": [
          {
            "name": "Event.Ingestion.Type",
            "val": "Marketing Email System",
            "excludeFromSearch": true
          },
          {
            "name": "Event.Ingestion.Operation",
            "val": "Structured Data Insertion",
            "excludeFromSearch": true
          },
          {
            "name": "Event.Ingestion.Domain_b64",
            "val": "${original_request?.bytes?.encodeBase64()?.toString()}",
            "excludeFromSearch": true
          },
          {
            "name": "Event.Ingestion.Metadata_Create_Date",
            "val": "${new Date()}",
            "excludeFromSearch": true,
            "type": "java.util.Date"
          }
        ]
      }
    ],
    "edges": [
      {
        "label": "Uses_Email",
        "fromVertexLabel": "Person.Identity",
        "toVertexLabel": "Object.Email_Address"
      },
      {
        "label": "Has_Phone",
        "fromVertexLabel": "Person.Identity",
        "toVertexLabel": "Object.Home_Phone_Number"
      },
      {
        "label": "Has_Phone",
        "fromVertexLabel": "Person.Identity",
        "toVertexLabel": "Object.Phone_Number"
      },
      {
        "label": "Lives",
        "fromVertexLabel": "Person.Identity",
        "toVertexLabel": "Location.Address"
      },
      {
        "label": "Has_Policy",
        "fromVertexLabel": "Person.Identity",
        "toVertexLabel": "Object.Phone_Number"
      },
      {
        "label": "Has_Ingestion_Event",
        "fromVertexLabel": "Person.Identity",
        "toVertexLabel": "Event.Ingestion"
      },
      {
        "label": "Has_Ingestion_Event",
        "fromVertexLabel": "Event.Group_Ingestion",
        "toVertexLabel": "Event.Ingestion"
      },
      {
        "label": "Has_Ingestion_Event",
        "toVertexLabel": "Event.Group_Ingestion",
        "fromVertexLabel": "Object.Data_Source"
      },
      {
        "label": "Is_Alias",
        "fromVertexLabel": "Person.Natural",
        "toVertexLabel": "Person.Identity"
      },
       {
        "label": "Uses_Email",
        "fromVertexLabel": "Person.Natural",
        "toVertexLabel": "Object.Email_Address"
      },
      {
        "label": "Has_Phone",
        "fromVertexLabel": "Person.Natural",
        "toVertexLabel": "Object.Home_Phone_Number"
      },
      {
        "label": "Has_Phone",
        "fromVertexLabel": "Person.Natural",
        "toVertexLabel": "Object.Phone_Number"
      },
      {
        "label": "Lives",
        "fromVertexLabel": "Person.Natural",
        "toVertexLabel": "Location.Address"
      },
      {
        "label": "Has_Policy",
        "fromVertexLabel": "Person.Natural",
        "toVertexLabel": "Object.Phone_Number"
      },
      {
        "label": "Has_Ingestion_Event",
        "fromVertexLabel": "Person.Natural",
        "toVertexLabel": "Event.Ingestion"
      }
    ]
  }
}
