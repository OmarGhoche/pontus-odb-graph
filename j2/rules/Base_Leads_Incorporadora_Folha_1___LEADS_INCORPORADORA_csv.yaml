# DO NOT UPDATE THIS FILE MANUALLY; ANY CHANGES WILL BE OVERRIDDEN BY THE J2 DIR TEMPLATES
updatereq:
  vertices:
    
    - label: Person.Natural
      props:
        - name: Person.Natural.Full_Name
          val: ${pg_NOME?.trim().toUpperCase()}
          mandatoryInSearch: True
        - name: Person.Natural.Full_Name_fuzzy
          val: ${pg_NOME?.trim().toUpperCase()}
          mandatoryInSearch: True
        - name: Person.Natural.Type
          val: leads
          mandatoryInSearch: False
          excludeFromSearch: True
    
    - label: Object.Salary
      props:
        - name: Object.Salary.Value
          val: ${pg_RENDA?.replaceAll('[^0-9\\.]','')}
          mandatoryInSearch: True
        - name: Object.Salary.Currency
          val: BRL
          mandatoryInSearch: True
          excludeFromSubsequenceSearch: True
        - name: Object.Salary.Period
          val: Mensal
          mandatoryInSearch: True
          excludeFromSubsequenceSearch: True
    
    - label: Person.Organisation
      name: CORRETOR
      props:
        - name: Person.Organisation.Name
          val: ${pg_CORRETOR}
          mandatoryInSearch: True
        - name: Person.Organisation.Short_Name
          val: ${pg_CORRETOR}
          mandatoryInSearch: True
        - name: Person.Organisation.Type
          val: Corretora
          mandatoryInSearch: False
          excludeFromSearch: True
    
    - label: Object.Phone_Number
      props:
        - name: Object.Phone_Number.Raw
          val: ${pg_TELEFONE}
          mandatoryInSearch: True
        - name: Object.Phone_Number.Type
          val: Celular
          mandatoryInSearch: True
          excludeFromSubsequenceSearch: True
        - name: Object.Phone_Number.Numbers_Only
          val: ${(pg_TELEFONE?.replaceAll('[^0-9]', '')?:'00000000')}
          mandatoryInSearch: False
          type: "[Ljava.lang.String;"
          excludeFromSearch: True
        - name: Object.Phone_Number.Last_7_Digits
          val: ${(((pg_TELEFONE?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}
          mandatoryInSearch: True
          type: "[Ljava.lang.String;"
    
    - label: Event.Consent
      props:
        - name: Event.Consent.Date
          val: ${new Date()}
          mandatoryInSearch: False
          type: "java.util.Date"
          excludeFromSearch: True
        - name: Event.Consent.Metadata.Create_Date
          val: ${new Date()}
          mandatoryInSearch: False
          type: "java.util.Date"
          excludeFromSearch: True
        - name: Event.Consent.Status
          val: ${'X'.equals(pg_CONSENTIMENTO?.toUpperCase())?'Consentimento':'Sem Consentimento'}
          mandatoryInSearch: False
          excludeFromSearch: True
    
    - label: Object.Email_Address
      props:
        - name: Object.Email_Address.Email
          val: ${pg_EMAIL?.trim()?.toLowerCase()}
          mandatoryInSearch: True
    
    - label: Location.Address
      props:
        - name: Location.Address.Full_Address
          val: ${pg_END__IMOVEL}
          mandatoryInSearch: True
        - name: Location.Address.Type
          val: Lead
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Location.Address.Code
          val: {pg_IMOVEL_INTERESSE}
          mandatoryInSearch: True
    
    - label: Event.Transaction
      props:
        - name: Event.Transaction.Type
          val: Interesse
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event.Transaction.Description
          val: Compra da Propriedade
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event.Transaction.Currency
          val: BRL
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event.Transaction.Date
          val: ${new Date()}
          mandatoryInSearch: False
          type: "java.util.Date"
          excludeFromSearch: True
    
    - label: Object.Data_Source
      props:
        - name: Object.Data_Source.Name
          val: planilhas - S3
          mandatoryInSearch: True
        - name: Object.Data_Source.Type
          val: planilhas - S3
          mandatoryInSearch: True
        - name: Object.Data_Source.Description
          val: planilhas guardadas na AWS S3
          mandatoryInSearch: True
    
    - label: Event.Group_Ingestion
      props:
        - name: Event.Group_Ingestion.Type
          val: planilhas - S3
          mandatoryInSearch: True
        - name: Event.Group_Ingestion.Operation
          val: Structured Data Insertion
          mandatoryInSearch: True
        - name: Event.Group_Ingestion.Ingestion_Date
          val: ${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}
          mandatoryInSearch: True
        - name: Event.Group_Ingestion.Metadata_Start_Date
          val: ${new Date()}
          mandatoryInSearch: False
          type: "java.util.Date"
          excludeFromSearch: True
        - name: Event.Group_Ingestion.Metadata_End_Date
          val: ${new Date()}
          mandatoryInSearch: False
          type: "java.util.Date"
          excludeFromSearch: True
    
    - label: Event.Ingestion
      props:
        - name: Event.Ingestion.Type
          val: planilhas - S3
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event.Ingestion.Operation
          val: Structured Data Insertion
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event.Ingestion.Domain_b64
          val: ${original_request?.bytes?.encodeBase64()?.toString()}
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event.Ingestion.Metadata_Create_Date
          val: ${new Date()}
          mandatoryInSearch: False
          type: "java.util.Date"
          excludeFromSearch: True

  edges:
  - label: Has_Ingestion_Event
    fromVertexLabel: Person.Natural
    toVertexLabel: Event.Ingestion
  - label: Has_Ingestion_Event
    fromVertexLabel: Event.Group_Ingestion
    toVertexLabel: Event.Ingestion
  - label: Has_Ingestion_Event
    fromVertexLabel: Object.Data_Source
    toVertexLabel: Event.Group_Ingestion
  - label: Uses_Email
    fromVertexLabel: Person.Natural
    toVertexLabel: Object.Email_Address
  - label: Consent
    fromVertexLabel: Person.Natural
    toVertexLabel: Event.Consent
  - label: Has_Salary
    fromVertexLabel: Person.Natural
    toVertexLabel: Object.Salary
  - label: Is_Responsible
    fromVertexLabel: Person.Natural
    toVertexLabel: Person.Organisation
  - label: Has_Transaction
    fromVertexLabel: Person.Natural
    toVertexLabel: Event.Transaction
  - label: Has_Transaction
    fromVertexLabel: Event.Transaction
    toVertexLabel: Location.Address
  - label: Has_Transaction
    fromVertexLabel: Person.Organisation
    toVertexLabel: Location.Address

