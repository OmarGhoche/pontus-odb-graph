updatereq:
  vertices:
    
    - label: Person.Natural
      condition: ${Title != Company}
      props:
        - name: Person.Natural.Full_Name
          val: ${Name_1?.trim()?.toUpperCase()}
        - name: Person.Natural.Full_Name_fuzzy
          val: ${Name_1?.toUpperCase()?.trim()}
        - name: Person.Natural.Customer_ID
          val: ${Tax_Number_2}
        - name: Person.Natural.Type
          val: Clientes
          excludeFromSearch: True
    
    - label: Person.Organisation
      condition: ${Title == Company}
      props:
        - name: Person.Organisation.Registration_Number
          val: ${Tax_Number_1}
          mandatoryInSearch: True
        - name: Person.Organisation.Name
          val: ${Name_1?.trim()?.toUpperCase()} ${Name_2?.trim()?.toUpperCase()}
        - name: Person.Organisation.Short_Name
          val: ${Name_1?.trim()?.toUpperCase()}
    
    - label: Location.Address
      props:
        - name: Location.Address.Full_Address
          val: ${ ((Street?:'')+ '\\n' + (City?:'') + '\\n' + (District?:'') + '\\n' + (Cty?:'')).replaceAll('\\n', ' ')}
          mandatoryInSearch: True
        - name: Location.Address.parser
          val: ${ ((Street?:'')+ '\\n' + (City?:'') + '\\n' + (District?:'') + '\\n' + (Cty?:'')).replaceAll('\\n', ' ')}
          type: "com.pontusvision.utils.LocationAddress"
          excludeFromSearch: True
        - name: Location.Address.Post_Code
          val: ${com.pontusvision.utils.PostCode.format(PostalCode)}
          excludeFromSearch: True
    
    - label: Event.Ingestion
      props:
        - name: Event.Ingestion.Type
          val: sap/clientes
          excludeFromSearch: True
        - name: Event.Ingestion.Operation
          val: Structured Data Insertion
          excludeFromSearch: True
        - name: Event.Ingestion.Domain_b64
          val: ${original_request?.bytes?.encodeBase64()?.toString()}
          excludeFromSearch: True
        - name: Event.Ingestion.Metadata_Create_Date
          val: ${CreateDate}
          type: "java.util.Date"
          excludeFromSearch: True
        - name: Event.Ingestion.Metadata_Update_Date
          val: ${LastUpdateDate}
          type: "java.util.Date"
          excludeFromSearch: True
    
    - label: Event.Group_Ingestion
      props:
        - name: Event.Group_Ingestion.Metadata_Start_Date
          val: ${currDate}
          mandatoryInSearch: True
          type: "java.util.Date"
        - name: Event.Group_Ingestion.Metadata_End_Date
          val: ${new Date()}
          type: "java.util.Date"
          excludeFromSearch: True
        - name: Event.Group_Ingestion.Type
          val: sap/clientes
          excludeFromSearch: True
        - name: Event.Group_Ingestion.Operation
          val: Structured Data Insertion
          excludeFromSearch: True
    
    - label: Object.Data_Source
      props:
        - name: Object.Data_Source.Name
          val: sap/clientes
        - name: Object.Data_Source.Type
          val: sap/clientes
        - name: Object.Data_Source.Description
          val: Registros de Clientes no Polaris/SAP

  edges:
  - label: Is_Located
    fromVertexLabel: Person.Organisation
    toVertexLabel: Location.Address
  - label: Is_Located
    fromVertexLabel: Person.Natural
    toVertexLabel: Location.Address
  - label: Has_Ingestion_Event
    fromVertexLabel: Person.Organisation
    toVertexLabel: Event.Ingestion
  - label: Has_Ingestion_Event
    fromVertexLabel: Person.Natural
    toVertexLabel: Event.Ingestion
  - label: Has_Ingestion_Event
    fromVertexLabel: Event.Group_Ingestion
    toVertexLabel: Event.Ingestion
  - label: Has_Ingestion_Event
    fromVertexLabel: Object.Data_Source
    toVertexLabel: Event.Group_Ingestion

