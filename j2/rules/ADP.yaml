# DO NOT UPDATE THIS FILE MANUALLY; ANY CHANGES WILL BE OVERRIDDEN BY THE J2 DIR TEMPLATES
updatereq:
  vertices:
    
    - label: Person.Natural
      name: titular
      props:
        - name: Person.Natural.Full_Name
          val: ${Nome?.trim().toUpperCase()}
        - name: Person.Natural.Full_Name_fuzzy
          val: ${Nome?.trim().toUpperCase()}
        - name: Person.Natural.Type
          val: colaborador
          excludeFromSearch: True
        - name: Person.Natural.Date_Of_Birth
          val: ${Data_de_Nascimento_Idade}
          predicate: eq
          mandatoryInSearch: True
          type: "java.util.Date"
    
    - label: Person.Employee
      props:
        - name: Person.Employee.ID
          val: ${Identidade}
        - name: Person.Employee.Title
          val: ${Matricula}
        - name: Person.Employee.Role
          val: ${Cargo} - ${Funcao}
    
    - label: Object.Identity_Card
      name: cpf
      props:
        - name: Object.Identity_Card.Id_Value
          val: ${CPF.replaceAll('[^0-9]','')}
          mandatoryInSearch: True
        - name: Object.Identity_Card.Id_Type
          val: CPF
          excludeFromSearch: True
    
    - label: Object.Email_Address
      condition: ${(Email != null) && !(Email.isEmpty())}
      props:
        - name: Object.Email_Address.Email
          val: ${Email?.trim()?.toUpperCase()}
    
    - label: Location.Address
      name: endereco_brasil
      condition: ${Domiciliado_no_Exterior == 'Não'}
      props:
        - name: Location.Address.Full_Address
          val: ${Tipo_Endereco}${N?', ' + N + ' ':''}${Complemento?:''} ${Bairro?', ' + Bairro + ' ':''}${Municipio02?:''}${CEP?' '+CEP:''}
        - name: Location.Address.Type
          val: Endereço Brasil
          excludeFromSearch: True
    
    - label: Location.Address
      name: endereco_exterior
      condition: ${Domiciliado_no_Exterior == 'Sim'}
      props:
        - name: Location.Address.Full_Address
          val: ${Tipo_Endereco}${N?', ' + N + ' ':''}${Complemento?:''} ${Bairro?', ' + Bairro + ' ':''}${Municipio02?:''}${CEP?' '+CEP:''}
        - name: Location.Address.Type
          val: Endereço Exterior
          excludeFromSearch: True
    
    - label: Event.Ingestion
      props:
        - name: Event.Ingestion.Type
          val: ADP
          excludeFromSearch: True
        - name: Event.Ingestion.Operation
          val: Structured Data Insertion
          excludeFromSearch: True
        - name: Event.Ingestion.Domain_b64
          val: ${original_request?.bytes?.encodeBase64()?.toString()}
          excludeFromSearch: True
        - name: Event.Ingestion.Metadata_Create_Date
          val: ${new Date()}
          type: "java.util.Date"
          excludeFromSearch: True
    
    - label: Object.Data_Source
      props:
        - name: Object.Data_Source.Name
          val: ADP
          mandatoryInSearch: True
        - name: Object.Data_Source.Description
          val: Dados ADP RH de Colaboradores
        - name: Object.Data_Source.Type
          val: Structured
    
    - label: Event.Group_Ingestion
      props:
        - name: Event.Group_Ingestion.Metadata_Start_Date
          val: ${new Date()}
          mandatoryInSearch: True
          type: "java.util.Date"
        - name: Event.Group_Ingestion.Metadata_End_Date
          val: ${new Date()}
          type: "java.util.Date"
          excludeFromSearch: True
        - name: Event.Group_Ingestion.Type
          val: ADP
          excludeFromSearch: True
        - name: Event.Group_Ingestion.Operation
          val: Structured Data Insertion
          excludeFromSearch: True
    
    - label: Object.Phone_Number
      name: telefone
      props:
        - name: Object.Phone_Number.Raw
          val: ${Telefone}
        - name: Object.Phone_Number.Type
          val: Telefone Fixo
          excludeFromSubsequenceSearch: True
        - name: Object.Phone_Number.Numbers_Only
          val: ${(Telefone?.replaceAll('[^0-9]', '')?:'00000000')}
          type: "[Ljava.lang.String;"
          excludeFromSearch: True
        - name: Object.Phone_Number.Last_7_Digits
          val: ${(((Telefone?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}
          mandatoryInSearch: True
          type: "[Ljava.lang.String;"
    
    - label: Object.Phone_Number
      name: telefone_comercial
      condition: ${Telefone_Comercial?.trim()?.length() > 0}
      props:
        - name: Object.Phone_Number.Raw
          val: ${Telefone_Comercial}

  edges:
  - label: Uses_Email
    fromVertexName: titular
    toVertexLabel: Object.Email_Address
  - label: Has_Address
    fromVertexName: titular
    toVertexName: endereco_brasil
  - label: Has_Address
    fromVertexName: titular
    toVertexName: endereco_exterior
  - label: Has_Ingestion_Event
    fromVertexName: titular
    toVertexLabel: Event.Ingestion
  - label: Has_Ingestion_Event
    fromVertexLabel: Person.Employee
    toVertexLabel: Event.Ingestion
  - label: Has_Ingestion_Event
    fromVertexLabel: Event.Group_Ingestion
    toVertexLabel: Event.Ingestion
  - label: Has_Ingestion_Event
    fromVertexLabel: Object.Data_Source
    toVertexLabel: Event.Group_Ingestion
  - label: Has_Id_Card
    fromVertexName: titular
    toVertexName: cpf
  - label: Has_Phone
    fromVertexName: titular
    toVertexName: telefone

