updatereq:
  vertices:
    
    - label: Person.Natural
      name: colaborador
      props:
        - name: Person.Natural.Full_Name
          val: ${RA_NOMECMP?.trim()?.toUpperCase()}
        - name: Person.Natural.Full_Name_fuzzy
          val: ${RA_NOMECMP?.trim()?.toUpperCase()}
        - name: Person.Natural.Type
          val: Colaborador
          excludeFromSearch: True
        - name: Person.Natural.Gender
          val: ${RA_SEXO}
        - name: Person.Natural.Customer_ID
          val: ${id}
          predicate: eq
          mandatoryInSearch: True
    
    - label: Location.Address
      name: home
      props:
        - name: Location.Address.Full_Address
          val: ${RA_ENDEREC} ${RA_COMPLEM} ${BAIRRO}, ${RA_MUNICIP} - ${RA_ESTADO}, ${RA_CEP}
        - name: Location.Address.Description
          val: moradia principal
        - name: Location.Address.Type
          val: home
    
    - label: Person.Natural
      name: mae
      props:
        - name: Person.Natural.Full_Name
          val: ${RA_MAE?.trim()?.toUpperCase()}
        - name: Person.Natural.Full_Name_fuzzy
          val: ${RA_MAE?.trim()?.toUpperCase()}
        - name: Person.Natural.Type
          val: colaborador-pais
        - name: Person.Natural.Gender
          val: F
    
    - label: Person.Natural
      name: pai
      props:
        - name: Person.Natural.Full_Name
          val: ${RA_PAI?.trim()?.toUpperCase()}
        - name: Person.Natural.Full_Name_fuzzy
          val: ${RA_PAI?.trim()?.toUpperCase()}
        - name: Person.Natural.Type
          val: colaborador-pais
        - name: Person.Natural.Gender
          val: M
    
    - label: Object.Phone_Number
      name: phone
      props:
        - name: Object.Phone_Number.Raw
          val: ${RA_TELEFON}
        - name: Object.Phone_Number.Type
          val: Office
          excludeFromSubsequenceSearch: True
        - name: Object.Phone_Number.Numbers_Only
          val: ${(RA_TELEFON?.replaceAll('[^0-9]', '')?:'00000000')}
          type: "[Ljava.lang.String;"
          excludeFromSearch: True
        - name: Object.Phone_Number.Last_7_Digits
          val: ${(((RA_TELEFON?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}
          mandatoryInSearch: True
          type: "[Ljava.lang.String;"
    
    - label: Object.Identity_Card
      name: rg
      props:
        - name: Object.Identity_Card.Id_Value
          val: ${RA_RG?.trim()?.toUpperCase()}
          mandatoryInSearch: True
        - name: Object.Identity_Card.Id_Type
          val: RG
          excludeFromSearch: True
    
    - label: Object.Email_Address
      name: email1
      props:
        - name: Object.Email_Address.Email
          val: ${RA_EMAIL.trim()?.toUpperCase()}
        - name: Object.Email_Address.Type
          val: ${(RA_EMAIL.trim()?.toUpperCase()?.contains('SUNNYVALE.COM.BR'))?'business':'personal'}
    
    - label: Object.Email_Address
      name: email2
      props:
        - name: Object.Email_Address.Email
          val: ${RA_EMAIL2.trim()?.toUpperCase()}
        - name: Object.Email_Address.Type
          val: ${(RA_EMAIL2.trim()?.toUpperCase()?.contains('SUNNYVALE.COM.BR'))?'business':'personal'}
    
    - label: Location.Address
      props:
        - name: Location.Address.Full_Address
          val: ${A1_END}, ${A1_BAIRRO},  ${A1_MUN} - ${A1_ESTADO}, ${A1_CEP}
    
    - label: Event.Ingestion
      props:
        - name: Event.Ingestion.Type
          val: totvs/protheus/sra_funcionarios
          excludeFromSearch: True
        - name: Event.Ingestion.Operation
          val: Structured Data Insertion
          excludeFromSearch: True
        - name: Event.Ingestion.Domain_b64
          val: ${original_request?.bytes?.encodeBase64()?.toString()}
          excludeFromSearch: True
        - name: Event.Ingestion.Metadata_Create_Date
          val: ${firstUpdate}
          type: "java.util.Date"
          excludeFromSearch: True
        - name: Event.Ingestion.Metadata_Update_Date
          val: ${lastUpdate}
          type: "java.util.Date"
          excludeFromSearch: True
    
    - label: Event.Group_Ingestion
      props:
        - name: Event.Group_Ingestion.Metadata_Start_Date
          val: ${currDate}
          mandatoryInSearch: True
          type: "java.util.Date"
        - name: Event.Group_Ingestion.Metadata_End_Date
          val: ${new Date()}
          type: "java.util.Date"
          excludeFromSearch: True
        - name: Event.Group_Ingestion.Type
          val: totvs/protheus/sra_funcionarios
          excludeFromSearch: True
        - name: Event.Group_Ingestion.Operation
          val: Structured Data Insertion
          excludeFromSearch: True
    
    - label: Object.Data_Source
      props:
        - name: Object.Data_Source.Name
          val: totvs/protheus/sra_funcionarios
        - name: Object.Data_Source.Type
          val: totvs/protheus/sra_funcionarios
        - name: Object.Data_Source.Description
          val: Registros de Funcionarios no protheus/Totvs

  edges:
  - label: Has_Ingestion_Event
    fromVertexName: colaborador
    toVertexLabel: Event.Ingestion
  - label: Has_Ingestion_Event
    fromVertexName: colaborador
    toVertexLabel: Event.Ingestion
  - label: Has_Ingestion_Event
    fromVertexName: colaborador
    toVertexLabel: Event.Ingestion
  - label: Is_Family
    fromVertexName: mae
    toVertexName: colaborador
  - label: Is_Family
    fromVertexName: pai
    toVertexName: colaborador
  - label: Has_Ingestion_Event
    fromVertexName: mae
    toVertexLabel: Event.Ingestion
  - label: Has_Ingestion_Event
    fromVertexLabel: Event.Group_Ingestion
    toVertexLabel: Event.Ingestion
  - label: Has_Ingestion_Event
    fromVertexLabel: Object.Data_Source
    toVertexLabel: Event.Group_Ingestion
  - label: Has_Phone
    fromVertexName: colaborador
    toVertexName: phone
  - label: Uses_Email
    fromVertexName: colaborador
    toVertexName: email1
  - label: Uses_Email
    fromVertexName: colaborador
    toVertexName: email2
  - label: Has_Id_Card
    fromVertexName: colaborador
    toVertexName: rg
  - label: Lives
    fromVertexName: colaborador
    toVertexName: home

