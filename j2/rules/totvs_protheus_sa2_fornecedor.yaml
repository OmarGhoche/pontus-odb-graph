# DO NOT UPDATE THIS FILE MANUALLY; ANY CHANGES WILL BE OVERRIDDEN BY THE J2 DIR TEMPLATES
updatereq:
  vertices:
    
    - label: Person.Organisation
      name: fornecedor
      condition: ${A2_CGC?.replaceAll('[^0-9]','')?.length() == 14}
      props:
        - name: Person.Organisation.Name
          val: ${A2_NOMRESP?.trim()?.toUpperCase()}
          mandatoryInSearch: True
        - name: Person.Organisation.Short_Name
          val: ${A2_NOME?.trim()?.toUpperCase()}
          mandatoryInSearch: True
        - name: Person.Organisation.Type
          val: Fornecedor
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Person.Organisation.Id
          val: ${A2_CGC.replaceAll('[^0-9]','')}
          mandatoryInSearch: True
    
    - label: Location.Address
      name: business_addr
      condition: ${A2_CGC?.replaceAll('[^0-9]','')?.length() == 14}
      props:
        - name: Location.Address.Full_Address
          val: ${A2_END} ${A2_ENDCOMP} ${A2_BAIRRO}, ${A2_MUNICIP} - ${A2_ESTADO}, ${A2_CEP}
          mandatoryInSearch: True
        - name: Location.Address.Description
          val: endereco fornecedor
          mandatoryInSearch: True
        - name: Location.Address.Type
          val: business
          mandatoryInSearch: True
    
    - label: Location.Address
      name: residence_addr
      condition: ${A2_CGC?.replaceAll('[^0-9]','')?.length() == 11}
      props:
        - name: Location.Address.Full_Address
          val: ${A2_END} ${A2_ENDCOMP} ${A2_BAIRRO}, ${A2_MUNICIP} - ${A2_ESTADO}, ${A2_CEP}
          mandatoryInSearch: True
        - name: Location.Address.Description
          val: endereco fornecedor
          mandatoryInSearch: True
        - name: Location.Address.Type
          val: residence
          mandatoryInSearch: True
    
    - label: Person.Natural
      name: rep
      condition: ${A2_CGC?.replaceAll('[^0-9]','')?.length() == 11}
      props:
        - name: Person.Natural.Full_Name
          val: ${A2_NOME?.trim()?.toUpperCase()}
          mandatoryInSearch: True
        - name: Person.Natural.Type
          val: fornecedor
          mandatoryInSearch: True
    
    - label: Object.Identity_Card
      name: RG
      condition: ${A2_RG?.replaceAll('[^0-9]', '')?.length() > 0}
      props:
        - name: Object.Identity_Card.Id_Value
          val: ${A2_RG?.replaceAll('[^0-9]','')}
          mandatoryInSearch: True
        - name: Object.Identity_Card.Id_Type
          val: RG
          mandatoryInSearch: False
          excludeFromSearch: True
    
    - label: Object.Identity_Card
      name: CNPJ
      condition: ${A2_CGC?.replaceAll('[^0-9]', '')?.length() == 14}
      props:
        - name: Object.Identity_Card.Id_Value
          val: ${A2_CGC?.replaceAll('[^0-9]','')}
          mandatoryInSearch: True
        - name: Object.Identity_Card.Id_Type
          val: CNPJ
          mandatoryInSearch: False
          excludeFromSearch: True
    
    - label: Object.Identity_Card
      name: CPF
      condition: ${A2_CGC?.replaceAll('[^0-9]','')?.length() == 11}
      props:
        - name: Object.Identity_Card.Id_Value
          val: ${A2_CGC?.replaceAll('[^0-9]','')}
          mandatoryInSearch: True
        - name: Object.Identity_Card.Id_Type
          val: CPF
          mandatoryInSearch: False
          excludeFromSearch: True
    
    - label: Object.Phone_Number
      name: rep_phone
      condition: ${A2_REPRTEL?.replaceAll('[^0-9]','').length() > 0}
      props:
        - name: Object.Phone_Number.Raw
          val: ${A2_REPRTEL}
          mandatoryInSearch: True
        - name: Object.Phone_Number.Type
          val: Office
          mandatoryInSearch: True
          excludeFromSubsequenceSearch: True
        - name: Object.Phone_Number.Numbers_Only
          val: ${(A2_REPRTEL?.replaceAll('[^0-9]', '')?:'00000000')}
          mandatoryInSearch: False
          type: "[Ljava.lang.String;"
          excludeFromSearch: True
        - name: Object.Phone_Number.Last_7_Digits
          val: ${(((A2_REPRTEL?.replaceAll('[^0-9]', ''))?:'0000000')[-7..-1])}
          mandatoryInSearch: True
          type: "[Ljava.lang.String;"
    
    - label: Object.Email_Address
      name: email1
      condition: ${A2_REPR_EM?.trim()?.length() > 0}
      props:
        - name: Object.Email_Address.Email
          val: ${A2_REPR_EM?.trim()?.toLowerCase()}
          mandatoryInSearch: True
    
    - label: Event.Ingestion
      props:
        - name: Event.Ingestion.Type
          val: totvs/protheus/sa2_fornecedor
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event.Ingestion.Operation
          val: Structured Data Insertion
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event.Ingestion.Domain_b64
          val: ${original_request?.bytes?.encodeBase64()?.toString()}
          mandatoryInSearch: False
          excludeFromSearch: True
        - name: Event.Ingestion.Metadata_Create_Date
          val: ${firstUpdate}
          mandatoryInSearch: False
          type: "java.util.Date"
          excludeFromSearch: True
        - name: Event.Ingestion.Metadata_Update_Date
          val: ${lastUpdate}
          mandatoryInSearch: False
          type: "java.util.Date"
          excludeFromSearch: True
    
    - label: Event.Group_Ingestion
      props:
        - name: Event.Group_Ingestion.Type
          val: totvs/protheus/sa2_fornecedor
          mandatoryInSearch: True
        - name: Event.Group_Ingestion.Operation
          val: Structured Data Insertion
          mandatoryInSearch: True
        - name: Event.Group_Ingestion.Ingestion_Date
          val: ${new java.text.SimpleDateFormat('yyyy-MM-dd').format(new Date())}
          mandatoryInSearch: True
        - name: Event.Group_Ingestion.Metadata_Start_Date
          val: ${new Date()}
          mandatoryInSearch: False
          type: "java.util.Date"
          excludeFromSearch: True
        - name: Event.Group_Ingestion.Metadata_End_Date
          val: ${new Date()}
          mandatoryInSearch: False
          type: "java.util.Date"
          excludeFromSearch: True
    
    - label: Object.Data_Source
      props:
        - name: Object.Data_Source.Name
          val: totvs/protheus/sa2_fornecedor
          mandatoryInSearch: True
        - name: Object.Data_Source.Type
          val: totvs/protheus/sa2_fornecedor
          mandatoryInSearch: True
        - name: Object.Data_Source.Description
          val: Registros de Fornecedores no protheus/Totvs
          mandatoryInSearch: True

  edges:
  - label: Has_Ingestion_Event
    fromVertexName: fornecedor
    toVertexLabel: Event.Ingestion
  - label: Has_Ingestion_Event
    fromVertexName: rep
    toVertexLabel: Event.Ingestion
  - label: Has_Ingestion_Event
    fromVertexLabel: Event.Group_Ingestion
    toVertexLabel: Event.Ingestion
  - label: Has_Ingestion_Event
    fromVertexLabel: Object.Data_Source
    toVertexLabel: Event.Group_Ingestion
  - label: Has_Phone
    fromVertexName: rep
    toVertexName: rep_phone
  - label: Uses_Email
    fromVertexName: rep
    toVertexName: email1
  - label: Is_Located
    fromVertexName: rep
    toVertexName: residence_addr
  - label: Has_Id_Card
    fromVertexName: rep
    toVertexName: RG
  - label: Has_Id_Card
    fromVertexName: rep
    toVertexName: CPF
  - label: Has_Id_Card
    fromVertexName: fornecedor
    toVertexName: CNPJ
  - label: Uses_Email
    fromVertexName: fornecedor
    toVertexName: email1
  - label: Has_Phone
    fromVertexName: fornecedor
    toVertexName: rep_phone
  - label: Is_Located
    fromVertexName: fornecedor
    toVertexName: business_addr

