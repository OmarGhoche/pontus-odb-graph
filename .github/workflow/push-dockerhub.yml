# STEP 3: AFTER push it to DockerHub (gonna need Docker Credentials as GitHub secret)

#    - name: Docker Build & Push Action
#      uses: mr-smithers-excellent/docker-build-push@v5.6
#      with:
#        image: pontusvisiongdpr/pontus-track-graphdb-odb-pt:latest
#        tags: latest
#        registry: docker.io
#        dockerfile: Dockerfile.ci
#        username: ${{ secrets.DOCKER_USERNAME }}
#        password: ${{ secrets.DOCKER_PASSWORD }}
#  publish:
#    needs: build


# STEP 4: FINALLY GitHub TAG MASTER branch with same value as DockerHub's semver

# ?????

# ---------------------------------------------------------------------------

#    - name: echo PWD
#      run: pwd
      
#    - name: list dir
#      run: ls /home/runner/work/pontus-odb-graph/pontus-odb-graph | cat
#       echo "/home/runner/work/pontus-odb-graph/pontus-odb-graph" |
#        echo "/home/runner/work/pontus-odb-graph/pontus-odb-graph/.github" |
#        ls /home/runner/work/pontus-odb-graph/pontus-odb-graph/.github

#    - name: echo GITHUB_WORKSPACE
#      run: echo "${GITHUB_WORKSPACE}"

#    - name: echo github.workspace
#      run: echo "${github.workspace}"

#    - name: Make file runnable && Build docker-lib
#     echo "${github.workspace}" |
#     echo "${GITHUB_WORKSPACE}"
#      run: |
#        chmod +x "${GITHUB_WORKSPACE}/.github/build-docker-lib.sh" |
#        "${GITHUB_WORKSPACE}/.github/build-docker-lib.sh"
      
#    - name: Build Docker Conf
#      run: build-docker-conf.sh


# -------------------------------------------------------------------- original:

#    - uses: actions/checkout@v2

#    - name: Set up JDK 1.8
#      uses: actions/setup-java@v2
#      with:
#        java-version: '8'
#        distribution: 'adopt'
#        cache: maven
